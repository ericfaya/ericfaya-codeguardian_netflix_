name: process-pull-request

    
on:
    pull_request:
        types: [opened, synchronize, reopened]
        
permissions:
    
    contents: read
    pull-requests: write

jobs:
 process-pull-request:
    runs-on: ubuntu-latest
        
    env:
      GROQAPIKEY: ${{ secrets.GROQAPIKEY }}
      GROQMODEL: ${{ secrets.GROQMODEL }}
      GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Get PR SHAs
        run: |
          echo "PR_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "PR_SHA_BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

      - name: Get files changed in latest commit of PR
        id: get_changed_files
        run: |
          # Usamos el √∫ltimo commit de la PR directamente
          git diff --name-only ${{ env.PR_SHA }}^ ${{ env.PR_SHA }} > changed_files.txt
          
          echo "üîç Archivos cambiados en el √∫ltimo commit:"
          cat changed_files.txt

      - name: Get Pull Request Info
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "REPO_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV

      - name: List files for debugging
        run: ls -lah

      - name: Run CodeGuardian JAR
        run: |
          java -jar codeguardian-0.0.1-SNAPSHOT.jar  \
            ${{ env.GROQAPIKEY }} \
            ${{ env.GROQMODEL }} \
            ${{ env.GITHUB_TOKEN }} \
            ${{ env.REPO_OWNER }} \
            ericfaya-codeguardian_netflix_ \
            ${{ env.PR_NUMBER }} \
            changed_files.txt

      - name: Verificar ejecuci√≥n del JAR
        run: |
          if [ $? -eq 0 ]; then
            echo "‚úÖ JAR ejecutado exitosamente"
            exit 0
          else
            echo "‚ùå Error en la ejecuci√≥n del JAR"
            exit 1
          fi
