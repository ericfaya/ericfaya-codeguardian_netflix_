name: Process Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  process-pull-request:
    runs-on: ubuntu-latest

    env:
      GROQAPIKEY: ${{ secrets.GROQAPIKEY }}
      GROQMODEL: ${{ secrets.GROQMODEL }}
      GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Trae todo el historial del repo

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Get PR SHAs
        run: |
          echo "PR_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "PR_SHA_BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

      - name: Get modified files in latest commit
        id: get_changed_files
        run: |
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files.txt
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          cat changed_files.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get Pull Request Info
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "BASE_BRANCH=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV
          echo "REPO_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
      
      - name: Check JAR existence
        run:  ls -l codeguardian-0.0.1-SNAPSHOT.jar
        
      - name: Run JAR with Pull Request Information
        run: |
          java -jar codeguardian-0.0.1-SNAPSHOT.jar  \
            ${{ env.GROQAPIKEY }} \
            ${{ env.GROQMODEL }} \
            ${{ env.GITHUB_TOKEN }} \
            ${{ env.REPO_OWNER }} \
            ericfaya-codeguardian_netflix_ \
            ${{ env.PR_NUMBER }} \
            changed_files.txt
                  

      - name: Verificar ejecución del JAR
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ JAR ejecutado exitosamente"
            exit 0
          else
            echo "❌ Error en la ejecución del JAR"
            exit 1
          fi
